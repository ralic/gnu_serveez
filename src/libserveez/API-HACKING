HACKING libserveez API					-*- org -*-

* rework libserveez.h generation, re-grouping by
*** typedef
*** struct
*** #define
*** func decl
*** macro
* rebase types on Guile "native" types
*** binary type -- SRFI 4 u8vector
*** address object -- address
* transparent(?) ‘inet-pton’ et al insinuation
* already done							    :ARCHIVE:
*** use explicit type for cast in ‘svz_hash_foreach_value’
*** add func ‘svz_library_features’
*** move most #include <foo.h> into defines.h and *.c ([[elisp:(grep%20"find%20..%20-name%20'*.h'%20-print0%20|%20xargs%20-0%20grep%20-nH%20-e%20'^#.*include.*<.*>'")][grep]]).
*** move most #if...#endif into defines.h and *.c ([[elisp:(grep%20"find%20.%20-name%20'*.h'%20-print0%20|%20xargs%20-0%20grep%20-nH%20-e%20'^#%20*if'%20|%20sed%20'/_H__$/d'")][grep]]).
*** prune ancillary elements
    | x | ∀ SVZ_U?INT..            | suboptimal | avoid                      |
    | x | svz_vasprintf            | unused     | internalize                |
    | x | svz_asprintf             | GNU        | avoid                      |
    | x | svz_snprintf             | 2011!      | use ‘snprintf’ directly    |
    | x | svz_strcasecmp           | danger     | use ‘strncasecmp’ instead  |
    | x | svz_strncasecmp          | 2011!      | use ‘strncasecmp’ directly |
    | x | svz_build                | cruft      | avoid                      |
    | x | svz_have_Win32           | pure lose  | avoid                      |
    | x | svz_have_debug           | var        | obsoleted by "features"    |
    | x | svz_have_floodprotect    | var        | obsoleted by "features"    |
    | x | svz_os_version           | woe        | internalize                |
    | x | svz_syserror             | woe        | internalize                |
    | x | svz_mutex_*              | suboptimal | internalize                |
    | x | svz_codec_init           | impl       | internalize                |
    | x | svz_codec_finalize       | impl       | internalize                |
    | x | svz_dynload_init         | impl       | interanlize                |
    | x | svz_dynload_finalize     | impl       | internalize                |
    | x | svz_strsignal_init       | impl       | internalize                |
    | x | svz_strsignal_destroy    | impl       | internalize                |
    | x | svz_sock_table_create    | impl       | internalize                |
    | x | svz_sock_table_destroy   | impl       | internalize                |
    | x | svz_signal_up            | impl       | internalize                |
    | x | svz_signal_dn            | impl       | internalize                |
    | x | svz_init_config          | impl       | internalize                |
    | x | svz_interface_collect    | impl       | internalize                |
    | x | svz_interface_free       | impl       | internalize                |
    | x | svz_net_startup          | impl       | internalize                |
    | x | svz_net_cleanup          | impl       | internalize                |
    | x | svz_pipe_startup         | impl       | internalize                |
    | x | svz_pipe_cleanup         | impl       | internalize                |
    | x | svz_config_type_init     | impl       | internalize                |
    | x | svz_config_type_finalize | impl       | internalize                |
    | x | svz_pmalloc              | impl       | internalize                |
    | x | svz_prealloc             | impl       | internalize                |
    | x | svz_pstrdup              | impl       | internalize                |
*** use "hidden" attribute (gcc only)
*** internalize elements unused outside of libserveez
*** noinst
    header is not installed (not in [[file:../libserveez.h][libserveez.h]])
    → ∅ (also → automatic ‘x’ for other columns)
*** woe
    exposed (not ‘SBO’, ‘svzint’) #ifdef __MINGW32__ and/or other woe
    → remove if possible ("done" means unavoidable)
*** macros
    → (for flexibility?) convert selected macros to functions ([[elisp:(grep%20"grep%20-nH%20-e%20'^#%20*define%20.*%5B^%20%5D(.*)'%20*.h%20*/*.h")][grep]])
*** generalized ip address
    takes ‘unsigned long’ (uint32_t) for network byte-order IPv4 address
    → replace ‘unsigned long’ with (pointer to) generalized ip address
*** pretty printer
    modify printing funcs to take ‘char *buf’ and ‘size_t size’;
    make them re-entrant (no static state)
*** refine, refine, refine!
***** work in progress ([[elisp:(let%20((dired-listing-switches%20"-alhFGrS"))%20(dired%20"*.h"))][dired by size]]) ([[shell:nm%20-g%20--defined-only%20.libs/libserveez.so][.so exports]])
      (for columns: ? ≡ need-info, o ≡ todo, x ≡ done)
      |----------------------+---+---+---+---+---+------|
      | file                 | [[noinst][n]] | [[woe][w]] | [[macros][m]] | [[generalized ip address][g]] | [[pretty%20printer][p]] | more |
      |----------------------+---+---+---+---+---+------|
      | [[file:server-socket.h][server-socket]]        | x |   |   |   |   |      |
      | [[file:raw-socket.h][raw-socket]]           | x |   |   |   |   |      |
      | [[file:dynload.h][dynload]]              |   |   |   |   |   |      |
      | [[file:mutex.h][mutex]]                | x | x |   |   |   |      |
      | [[file:tcp-socket.h][tcp-socket]]           |   |   |   | x |   |      |
      | [[file:windoze.h][windoze]]              |   | x |   |   |   |      |
      | [[file:boot.h][boot]]                 |   |   |   |   |   |      |
      | [[file:udp-socket.h][udp-socket]]           |   |   |   | x |   |      |
      | [[file:interface.h][interface]]            |   |   |   | x |   |      |
      | [[file:binding.h][binding]]              |   |   |   |   | x | [[more-binding][more]] |
      | [[file:pipe-socket.h][pipe-socket]]          |   |   |   |   |   |      |
      | [[file:passthrough.h][passthrough]]          |   | x |   |   |   |      |
      | [[file:defines.h][defines]]              |   |   |   |   |   |      |
      | [[file:core.h][core]]                 |   |   |   | x |   | [[more-core][more]] |
      | [[file:alloc.h][alloc]]                |   |   |   |   |   |      |
      | [[file:iphlpapi.h][iphlpapi]]             | x | x |   |   |   |      |
      | [[file:array.h][array]]                |   |   |   |   |   |      |
      | [[file:server-core.h][server-core]]          |   |   |   |   |   | [[more-server-core][more]] |
      | [[file:util.h][util]]                 |   | x |   |   |   |      |
      | [[file:hash.h][hash]]                 |   |   |   |   |   |      |
      | [[file:icmp-socket.h][icmp-socket]]          |   |   |   | x |   |      |
      | [[file:ipdata.h][ipdata]]               | x |   |   |   |   |      |
      | [[file:server.h][server]]               |   |   |   |   |   |      |
      | [[file:portcfg.h][portcfg]]              |   |   | x |   | x |      |
      | [[file:cfg.h][cfg]]                  |   |   |   |   |   |      |
      | [[file:socket.h][socket]]               |   | x | x | x |   |      |
      | [[file:codec/bzip2.h][codec/bzip2]]          | x |   |   |   |   |      |
      | [[file:codec/codec.h][codec/codec]]          |   |   |   |   |   |      |
      | [[file:codec/gzlib.h][codec/gzlib]]          | x |   |   |   |   |      |
      | [[file:coserver/coserver.h][coserver/coserver]]    |   | x | x | x |   | [[more-coserver/coserver][more]] |
      | [[file:coserver/dns.h][coserver/dns]]         | x |   |   |   |   |      |
      | [[file:coserver/ident.h][coserver/ident]]       | x |   |   |   |   |      |
      | [[file:coserver/reverse-dns.h][coserver/reverse-dns]] | x |   |   |   |   |      |
      | [[file:coserver/xerror.h][coserver/xerror]]      | x |   |   |   |   |      |
      |----------------------+---+---+---+---+---+------|
***** more-binding
******* specialize ‘svz_server_portcfgs’
      	into ‘svz_server_first_configured_address’ for clients [[file:~/build/GNU/serveez/src/http-server/http-proto.c::svz_server_portcfgs][http]], [[file:~/build/GNU/serveez/src/irc-server/irc-proto.c::svz_server_portcfgs][irc]]
******* replace ‘svz_server_listeners’ (+ ‘svz_array_destroy’)
      	with new func ‘svz_server_listener_foreach’
******* replace ‘svz_sock_servers’ (+ ‘svz_array_destroy’)
      	with new func ‘svz_sock_servers_foreach’
***** more-core
******* replace ‘svz_inet_ntoa’ and ‘svz_inet_aton’
      	with something that can handle [[generalized ip address]]
      	(this is in addition to ‘svz_socket_connect’)
***** more-server-core
******* (maybe) combine set/get funcs
***** more-coserver/coserver
******* raise abstraction
********* move ctrl-server funcs into coserver.c
********* zonk ‘svz_foreach_coserver’, ‘svz_coserver_destroy’
******* make ‘svz_coserver_send_request’ take ‘svz_coserver_t *’, not TYPE
* etc
#+STARTUP: odd


Copyright (C) 2011-2014 Thien-Thi Nguyen

Copying and distribution of this file, with or without modification,
are permitted provided the copyright notice and this notice are preserved.
